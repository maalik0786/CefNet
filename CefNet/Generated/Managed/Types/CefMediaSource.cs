// --------------------------------------------------------------------------------------------
// Copyright (c) 2019 The CefNet Authors. All rights reserved.
// Licensed under the MIT license.
// See the licence file in the project root for full license information.
// --------------------------------------------------------------------------------------------
// Generated by CefGen
// Source: Generated/Native/Types/cef_media_source_t.cs
// --------------------------------------------------------------------------------------------﻿
// DO NOT MODIFY! THIS IS AUTOGENERATED FILE!
// --------------------------------------------------------------------------------------------

#pragma warning disable 0169, 1591, 1573

using System;
using CefNet.CApi;

namespace CefNet
{
	/// <summary>
	///  Represents a source from which media can be routed. Instances of this object
	///  are retrieved via cef_media_router_t::GetSource. The functions of this
	///  structure may be called on any browser process thread unless otherwise
	///  indicated.
	/// </summary>
	/// <remarks>
	///  Role: Proxy
	/// </remarks>
	public unsafe class CefMediaSource : CefBaseRefCounted<cef_media_source_t>
	{
		public CefMediaSource(cef_media_source_t* instance)
			: base((cef_base_ref_counted_t*) instance)
		{
		}

		/// <summary>
		///  Gets the ID (media source URN or URL) for this source.
		///  The resulting string must be freed by calling cef_string_userfree_free().
		/// </summary>
		public virtual string Id => SafeCall(CefString.ReadAndFree(NativeInstance->GetId()));

		/// <summary>
		///  Gets a value indicating whether this source outputs its content via Cast.
		/// </summary>
		public virtual bool IsCastSource => SafeCall(NativeInstance->IsCastSource() != 0);

		/// <summary>
		///  Gets a value indicating whether this source outputs its content via DIAL.
		/// </summary>
		public virtual bool IsDialSource => SafeCall(NativeInstance->IsDialSource() != 0);

		internal static CefMediaSource Create(IntPtr instance)
		{
			return new CefMediaSource((cef_media_source_t*) instance);
		}
	}
}