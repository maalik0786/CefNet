// --------------------------------------------------------------------------------------------
// Copyright (c) 2019 The CefNet Authors. All rights reserved.
// Licensed under the MIT license.
// See the licence file in the project root for full license information.
// --------------------------------------------------------------------------------------------
// Generated by CefGen
// Source: Generated/Native/Types/cef_web_plugin_info_t.cs
// --------------------------------------------------------------------------------------------﻿
// DO NOT MODIFY! THIS IS AUTOGENERATED FILE!
// --------------------------------------------------------------------------------------------

#pragma warning disable 0169, 1591, 1573

using System;
using CefNet.CApi;

namespace CefNet
{
	/// <summary>
	///  Information about a specific web plugin.
	/// </summary>
	/// <remarks>
	///  Role: Proxy
	/// </remarks>
	public unsafe class CefWebPluginInfo : CefBaseRefCounted<cef_web_plugin_info_t>
	{
		public CefWebPluginInfo(cef_web_plugin_info_t* instance)
			: base((cef_base_ref_counted_t*) instance)
		{
		}

		/// <summary>
		///  Gets the plugin name (i.e. Flash).
		///  The resulting string must be freed by calling cef_string_userfree_free().
		/// </summary>
		public virtual string Name => SafeCall(CefString.ReadAndFree(NativeInstance->GetName()));

		/// <summary>
		///  Gets the plugin file path (DLL/bundle/library).
		///  The resulting string must be freed by calling cef_string_userfree_free().
		/// </summary>
		public virtual string Path => SafeCall(CefString.ReadAndFree(NativeInstance->GetPath()));

		/// <summary>
		///  Gets the version of the plugin (may be OS-specific).
		///  The resulting string must be freed by calling cef_string_userfree_free().
		/// </summary>
		public virtual string Version => SafeCall(CefString.ReadAndFree(NativeInstance->GetVersion()));

		/// <summary>
		///  Gets a description of the plugin from the version information.
		///  The resulting string must be freed by calling cef_string_userfree_free().
		/// </summary>
		public virtual string Description => SafeCall(CefString.ReadAndFree(NativeInstance->GetDescription()));

		internal static CefWebPluginInfo Create(IntPtr instance)
		{
			return new CefWebPluginInfo((cef_web_plugin_info_t*) instance);
		}
	}
}