// --------------------------------------------------------------------------------------------
// Copyright (c) 2019 The CefNet Authors. All rights reserved.
// Licensed under the MIT license.
// See the licence file in the project root for full license information.
// --------------------------------------------------------------------------------------------
// Generated by CefGen
// Source: Generated/Native/Types/cef_audio_handler_t.cs
// --------------------------------------------------------------------------------------------﻿
// DO NOT MODIFY! THIS IS AUTOGENERATED FILE!
// --------------------------------------------------------------------------------------------

#pragma warning disable 0169, 1591, 1573

using System;

namespace CefNet.Internal
{
	internal sealed class CefAudioHandlerGlue : CefAudioHandler, ICefAudioHandlerPrivate
	{
		private readonly WebViewGlue _implementation;

		public CefAudioHandlerGlue(WebViewGlue impl)
		{
			_implementation = impl;
		}

		bool ICefAudioHandlerPrivate.AvoidGetAudioParameters()
		{
			return _implementation.AvoidGetAudioParameters();
		}

		bool ICefAudioHandlerPrivate.AvoidOnAudioStreamStarted()
		{
			return _implementation.AvoidOnAudioStreamStarted();
		}

		bool ICefAudioHandlerPrivate.AvoidOnAudioStreamPacket()
		{
			return _implementation.AvoidOnAudioStreamPacket();
		}

		bool ICefAudioHandlerPrivate.AvoidOnAudioStreamStopped()
		{
			return _implementation.AvoidOnAudioStreamStopped();
		}

		bool ICefAudioHandlerPrivate.AvoidOnAudioStreamError()
		{
			return _implementation.AvoidOnAudioStreamError();
		}

		protected internal override bool GetAudioParameters(CefBrowser browser, ref CefAudioParameters @params)
		{
			return _implementation.GetAudioParameters(browser, ref @params);
		}

		protected internal override void OnAudioStreamStarted(CefBrowser browser, CefAudioParameters @params,
			int channels)
		{
			_implementation.OnAudioStreamStarted(browser, @params, channels);
		}

		protected internal override void OnAudioStreamPacket(CefBrowser browser, IntPtr data, int frames, long pts)
		{
			_implementation.OnAudioStreamPacket(browser, data, frames, pts);
		}

		protected internal override void OnAudioStreamStopped(CefBrowser browser)
		{
			_implementation.OnAudioStreamStopped(browser);
		}

		protected internal override void OnAudioStreamError(CefBrowser browser, string message)
		{
			_implementation.OnAudioStreamError(browser, message);
		}
	}
}